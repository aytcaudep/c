//STL (#include <algorithm>)

    vector<int> vec = { -2, 9, 4, 7 };
    // vec.begin() указатель на начало вектора
    // vec.end() указатель за конец вектора

    for_each(vec.begin(), vec.end(), output); 
    cout << "\n";
    //проходит по элементам контейнера от первого до второго итератора, применяя к элементам функцию

    cout << all_of(vec.begin(), vec.end(), is_positive) << "\n";
    //проверяет что все элементы удовлетворяют условию функции, возвращает true/false

    cout << any_of(vec.begin(), vec.end(), is_positive) << "\n";
    //проверяет что хотя бы 1 элемент удовлетворяет условию функции, возвращает true/false
    cout << none_of(vec.begin(), vec.end(), is_positive) << "\n";
    //проверяет что ни один элемент не удовлетворяет условию функции, возвращает true/false

    cout << count_if(vec.begin(), vec.end(), is_positive) << "\n";
    //считает кол-во элементов которые удовлетворяют условию функции

    vector<int>::iterator it =  find_if(vec.begin(), vec.end(), is_positive);
    cout << *it;
    //поиск элемента удовлетворяют условию функции, возвращает указатель или итератор на ПЕРВЫЙ найденный элемент
    //если таких элеметов нет, то возвращает итеротор конца
